一.通用base库:
1.RxJava(RxBinding)+Retrofit+Okhttp;
2.终极全尺寸屏幕布局适配方案,默认1080*1920,涵盖480*320到3200*1440绝大部分机型;
3.组件化+模块化(阿里路由框架ARoute);
4.MVP+MVVM开发模式;
5.沉浸式UI:BaseActivity+BaseFragment;
6.常用Util库:log+toast+glide+thread+sp等;
7.最强dialog(轮子哥出品).

二.子依赖库
1.lib_db:greendao数据库;
2.lib_gson:json容错解析框架,解析数据时不会crash,同时会打印解析报错字段和回台返回值类型;
3.lib_permission:适配安卓10以上权限;
4.lib_shapeView:强大的shape框架,不用再写任何xmlshape文件,0学习成本.
5.banner.

           <com.youth.banner.Banner
                    android:id="@+id/banner"
                    android:layout_width="match_parent"
                    android:layout_height="@dimen/x550"
                    android:layout_marginTop="@dimen/x20"
                    app:banner_indicator_height="@dimen/x15"
                    app:banner_indicator_marginBottom="@dimen/x25"
                    app:banner_indicator_normal_color="@color/cl_999"
                    app:banner_indicator_normal_width="@dimen/x23"
                    app:banner_indicator_selected_color="@android:color/white" />

      mViewBinding.banner.setAdapter(ImageAdapter(autoRollItems) {
            try {
                val resBean = list[it]
                ListVideoActivity.startActivity(requireActivity(), resBean.title ?: "", videosBean(resBean.albumId.toString() + ".json")!!.data!!.vlist!!)
            } catch (e: Exception) {
                e.printStackTrace()
            }
        })
        mViewBinding.banner.indicator = CircleIndicator(requireContext())
        //添加画廊效果
        //添加画廊效果
        val resources = requireContext().resources
        mViewBinding.banner.setBannerGalleryEffect(resources.getDimension(R.dimen.x20).toInt(), resources.getDimension(R.dimen.x15).toInt(), 0.8f)
三.相册
.setSelectorUIStyle(); 设置相册主题
.setLanguage(); 设置相册语言
.setImageEngine(); 设置相册图片加载引擎
.setCompressEngine(); 设置相册压缩引擎
.setCropEngine(); 设置相册裁剪引擎
.setSandboxFileEngine(); 设置相册沙盒目录拷贝引擎
.setOriginalFileEngine(); 设置相册图片原图处理引擎
.setExtendLoaderEngine(); 设置相册数据源加载引擎
.setCameraInterceptListener(); 拦截相机事件，实现自定义相机
.setEditMediaInterceptListener(); 拦截资源编辑事件，实现自定义编辑
.setPermissionsInterceptListener(); 拦截相册权限处理事件，实现自定义权限
.setSelectLimitTipsListener();拦截选择限制事件，可实现自定义提示
.isCameraForegroundService(); 拍照时是否开启一个前台服务
.setRequestedOrientation(); 设置屏幕旋转方向
.setSelectedData(); 相册已选数据
.setRecyclerAnimationMode(); 相册列表动画效果
.setImageSpanCount(); 相册列表每行显示个数
.isDisplayCamera(); 是否显示相机入口
.isPageStrategy(); 是否开启分页模式
.selectionMode(); 单选或是多选
.setMaxSelectNum(); 图片最大选择数量
.setMinSelectNum(); 图片最小选择数量
.setMaxVideoSelectNum(); 视频最大选择数量
.setMinVideoSelectNum(); 视频最小选择数量
.setRecordVideoMaxSecond(); 视频录制最大时长
.setRecordVideoMinSecond(); 视频录制最小时长
.setFilterVideoMaxSecond(); 过滤视频最大时长
.setFilterVideoMinSecond(); 过滤视频最小时长
.setSelectMaxDurationSecond(); 选择最大时长视频或音频
.setSelectMinDurationSecond(); 选择最小时长视频或音频
.setVideoQuality(); 系统相机录制视频质量
.isQuickCapture(); 使用系统摄像机录制后，是否支持使用系统播放器立即播放视频
.isPreviewAudio(); 是否支持音频预览
.isPreviewImage(); 是否支持预览图片
.isPreviewVideo(); 是否支持预览视频
.isPreviewFullScreenMode(); 预览点击全屏效果
.isEmptyResultReturn(); 支持未选择返回
.isWithSelectVideoImage(); 是否支持视频图片同选
.isZoomAnim(); 选择缩放效果
.isOpenClickSound(); 是否开启点击音效
.isCameraAroundState(); 是否开启前置摄像头；系统相机 只支持部分机型
.isCameraRotateImage(); 拍照是否纠正旋转图片
.isGif(); 是否显示gif文件
.isWebp(); 是否显示webp文件
.isBmp(); 是否显示bmp文件
.isHidePreviewDownload(); 是否隐藏预览下载功能
.isAutoScalePreviewImage(); 预览图片自动放大充满屏幕
.setOfAllCameraType(); isWithSelectVideoImage模式下相机优先使用权
.isMaxSelectEnabledMask(); 达到最大选择数是否开启禁选蒙层
.isSyncCover(); isPageModel模式下是否强制同步封面，默认false
.isAutomaticTitleRecyclerTop(); 点击相册标题是否快速回到第一项
.isFastSlidingSelect(); 快速滑动选择
.isDirectReturnSingle(); 单选时是否立即返回
.setCameraImageFormat(); 拍照图片输出格式
.setCameraImageFormatForQ(); 拍照图片输出格式，Android Q以上
.setCameraVideoFormat(); 拍照视频输出格式
.setCameraVideoFormatForQ(); 拍照视频输出格式，Android Q以上
.setOutputCameraDir(); 使用相机输出路径
.setOutputAudioDir();使用录音输出路径
.setOutputCameraImageFileName(); 图片输出文件名
.setOutputCameraVideoFileName(); 视频输出文件名
.setOutputAudioFileName(); 录音输出文件名
.setQuerySandboxDir(); 查询指定目录下的资源
.isOnlyObtainSandboxDir(); 是否只查询指定目录下的资源
.setFilterMaxFileSize(); 过滤最大文件
.setFilterMinFileSize(); 过滤最小文件
.setSelectMaxFileSize(); 最大可选文件大小
.setSelectMinFileSize(); 最小可选文件大小
.setQueryOnlyMimeType(); 查询指定文件类型
.setSkipCropMimeType(); 跳过不需要裁剪的类型